unit Unit2;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils;

// Создадит тип двухмерного массива,
//чтобы можно было передавать матрицы в различные функции

// Причом важно описать этот тип именно в области interface,
// а то данный тип не будет виден в модуле unit1,
// куда подключается наш модуль unit2 с этим типом
type
  Ar = array [1..15] of integer; // одномерный массив - СТРОКИ МАТРИЦЫ
  Matrix = array [1..15] of Ar; // двумерный массив - МАТРИЦА


// Прототипы функций - просто их заголовки
// - это те функции которые должны быть видны в модуле unit1 - та же причина,
// что и с типом unit1
procedure CreateMatrix(var a: Matrix; n : integer; m: integer);
procedure SumRow(row: Ar; m: integer; var s:integer);



implementation

{Процедура заполнения матрицы рандомными числами}
//'var a' - т.к. меняем элементы матрицы
//  'n' - число строк
//  'm' - число столбцов
procedure CreateMatrix(var a: Matrix; n : integer; m: integer);
var i, j: integer;
begin
   randomize;  // Для генератора случайных чисел - более случайное число
   for i:=1 to n do
       for j:=1 to m do
           a[i,j] := 1 + random(100); // рандомное число на отрезке [1;100]
end;

{Процедура нахождения Суммы чисел в строке}
// Процедура после работы записыват сумму чисел в строке в переменную 's'
// Здесь было бы легче сделать ФУНКЦИЮ - возвращающая сумму элементов как результат работы
// Но похожая реализация была в других прогах, которые преподаватель мог видеть
// Поэтому делаем ПРОЦЕДУРУ
// row : Ar - строка матрицы (Ar а не Matrix - тк. СТРОКА - ОДНОМЕРНЫЙ массив)
//        удобно передавать только строку, а не всю матрицу
//        иначе пришлось бы передавать в функцию номер строки.
// 'm' - количество столбцов в строке
// 's' - сумма всех чисел в строке
//    var s - т.к. изменяем значение переменной
procedure SumRow(row: Ar; m: integer; var s: integer);
var  j: integer; // индекс столбцов
begin
   // находим сумму элементов в СТРОКЕ( а не во всей матрице)
   s:= 0;
   for j:=1 to m do
       s:= s + row[j];
   // Всё - переменная s изменила своё значение
end;

end.

